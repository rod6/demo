// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/things.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ThingsClient is the client API for Things service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThingsClient interface {
	// user
	MethodY(ctx context.Context, in *OK, opts ...grpc.CallOption) (*OK, error)
}

type thingsClient struct {
	cc *grpc.ClientConn
}

func NewThingsClient(cc *grpc.ClientConn) ThingsClient {
	return &thingsClient{cc}
}

func (c *thingsClient) MethodY(ctx context.Context, in *OK, opts ...grpc.CallOption) (*OK, error) {
	out := new(OK)
	err := c.cc.Invoke(ctx, "/pb.Things/MethodY", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThingsServer is the server API for Things service.
type ThingsServer interface {
	// user
	MethodY(context.Context, *OK) (*OK, error)
}

func RegisterThingsServer(s *grpc.Server, srv ThingsServer) {
	s.RegisterService(&_Things_serviceDesc, srv)
}

func _Things_MethodY_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OK)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingsServer).MethodY(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Things/MethodY",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingsServer).MethodY(ctx, req.(*OK))
	}
	return interceptor(ctx, in, info, handler)
}

var _Things_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Things",
	HandlerType: (*ThingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MethodY",
			Handler:    _Things_MethodY_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/things.proto",
}

func init() { proto.RegisterFile("pb/things.proto", fileDescriptor_things_0d92f22716df9afe) }

var fileDescriptor_things_0d92f22716df9afe = []byte{
	// 89 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0xd2, 0x2f,
	0xc9, 0xc8, 0xcc, 0x4b, 0x2f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92,
	0x02, 0x09, 0x26, 0xe7, 0xe7, 0xe6, 0xe6, 0xe7, 0x41, 0x04, 0x8d, 0x94, 0xb9, 0xd8, 0x42, 0xc0,
	0x8a, 0x84, 0x24, 0xb9, 0xd8, 0x7d, 0x53, 0x4b, 0x32, 0xf2, 0x53, 0x22, 0x85, 0xd8, 0xf4, 0x0a,
	0x92, 0xf4, 0xfc, 0xbd, 0xa5, 0xa0, 0x74, 0x12, 0x1b, 0x58, 0xad, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0xa8, 0x22, 0x9c, 0x85, 0x53, 0x00, 0x00, 0x00,
}
